<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADIGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9
        InhtcC5paWQ6RjdCQTBENjk1NUE1MTFFNDlBNEVBMTJCMjkzODk3MUUiIHhtcE1NOkRvY3VtZW50SUQ9
        InhtcC5kaWQ6RjdCQTBENkE1NUE1MTFFNDlBNEVBMTJCMjkzODk3MUUiPiA8eG1wTU06RGVyaXZlZEZy
        b20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGN0JBMEQ2NzU1QTUxMUU0OUE0RUExMkIyOTM4OTcx
        RSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpGN0JBMEQ2ODU1QTUxMUU0OUE0RUExMkIyOTM4OTcx
        RSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVu
        ZD0iciI/PpN3zHUAAAMnSURBVGhD3ZbbThNRFIa5IITwEMYrUnqYzqFCOwc6IggkaqLSaCKiJjwAl8R4
        4wMY0hDiBWlQ2qIxUIkXxnt6oAQtqO+z3WtgYkN+0xlKmywvvrR83ZOsf9baezMghPgvgJIjUHIESo5A
        yREoOQIlR6DkCJQcgZIjUHIESo5AyREoOQIlR6DsJ9/2K9eQDwuU/eLLxw+jaSWx9TT38CX6PQxQ9oP9
        nXKEQtiqKiZ1ffPxvbuv0bqgQNlrdrffx20tWZCIrKYK+rSSycLzhYVVtD4IUPaST++2FMfQNjNK3Avh
        JBUPGcQLs7y0tIKe6wSUvaJSKkYphKOfdcHVNWHGY8JMJkTWMMSsY+eP6/Vh9GwnoAzL18rudeTboT1B
        b5wCpBMxrwuTquyCKj8NTdy2rfyP6sEIejYIUIbh2aPcqqmrhb1yMYp+Jz6XSxG5qQsOjY8sPJvSvRBe
        GBnCHb/x9ufR4SB6NihQBuVFLrcqC5IFKjQeW/ulUuTimt3SdtSSG5vGyStcUYQrTypbSQg6sW5l0hun
        zcbQxefCAmUQFh/cfzUeGytScTcNXViJOL3dzUp5Z9RfU9kpRSxN9caJCqd1WdkVP8icbed/NbvrhA+U
        nVh+srjiGLq3aadSxt95l2Go8L3idpT2hCm7RacTbWY/LK0l7rjum9NGvetO+EDZiVa9MTSVnthwUykx
        MRbx3i4dpV4Y+cYdTRMTsdjZ/MuTyT9mvTtDdmMmk1k/qdcudTr9CyiDQIXMWlaeiqYAXpEykN8d6hT9
        Td/9btFvtCd+HzWvZJzagTIorVp9aMYy16kLNDpUMHWAAlDhfrDz/SNmbXP95PDqxqkdKMNwetgcpIuM
        7gY6Wqlwf4z8caOuTZtXP07tQBmWVq06PO84a7SpvXviPAR1xNV1MZ3uzTi1A+Vl+F6tDU9bdt6Ox8WU
        LJ6CmPLOoG61Gr3rhA+Ul4XCzMs9Q52gEHRPdPNvRxig7AYaM+rC3KSzRt/Rml4AZbccVasjxwf9C0FA
        yREoOQIlR6DkCJQcgZIjUHIESo5AyREoOQIlR6DkCJQcgZIjUPJDDPwB7OAnkwMC4oIAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADIGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9
        InhtcC5paWQ6MkUyMDUzMzI1NUE2MTFFNDg3QzVFMjUwRDQzRUVCRUEiIHhtcE1NOkRvY3VtZW50SUQ9
        InhtcC5kaWQ6MkUyMDUzMzM1NUE2MTFFNDg3QzVFMjUwRDQzRUVCRUEiPiA8eG1wTU06RGVyaXZlZEZy
        b20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoyRTIwNTMzMDU1QTYxMUU0ODdDNUUyNTBENDNFRUJF
        QSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoyRTIwNTMzMTU1QTYxMUU0ODdDNUUyNTBENDNFRUJF
        QSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVu
        ZD0iciI/PvNeQpcAAAOsSURBVGhD3ZjbTlNBFIZ5AmK88BGwtt3nVtruHhB9AtM0hPgOCj2qHMrhHUjT
        NARauDACXniIECCGRB9rXP/sbjS4hD2liYwXX9r8e3az/pm1Zs10QgjxX8CKOsKKOsKKOsKKOsKKOsKK
        OsKKOsKKOsKKOsKKOsKKOsKKOsKKOsKKqnw7ObnH6ddxcXo6yemjwooqHO0NpvKu01mpVee45xzrzXol
        71jdg/5ujHs+CqwYlaN+P5YzzV7BcUTetrvrrWaZG/c7G69bz6eT8Z2CZYqcZfQ+7O9NceNUYcUovNvZ
        jSP4kmML4BtJaQaBcuPBar1WgfHZlCeKtiWeeK40g1XlxqvAijdx8fX4fsFLbRXtwARmF4HlTUMG1m7U
        K1ffWWs2yr5ldem5HFs0g3dyyYQopryt8y+fHlx9RwVWjEK70SznksntEqUVjGB2Z1xHlFKuyJrJ7TWq
        g3Ds0uLCPKVfp+gFYzEuNELjO5xxVVgxKhtNMkOpAjNyZoer4tumKLh2F6mEukHKkblLs5n4I/kJc29e
        vXzB/bYqrKgCZjODlaGVgAkEi3qRtROsjvyOwEMd42B0uXb7lQhhRVUw68h/GeAwdfCJlcF3rFbJCupC
        PsNq1RYjb9dRYMVRQB+RZhxLzrxMM8OmT1oNm2oCBU5gDOqL+43bwIqjslqtziHYp+mUDBq1AyNh/WCF
        UDfcu7eFFUdlvdEoF5BCFHQ2EZf1gVSSW7QbMI4dioMVRwF1Irs8GQmL+9njNO1QD6legiKHsXQivtNu
        Ne5maq00apWMafSyBu1a6TQFHtSJb8SliRnHFLPucDfzPAHDUY4zKrCiCihyHBqpiMVMKoXOLlDwSCOk
        WLiDFWBS1kxgEofGcaYZK0ZFFrfrdsJeIbfeNM04mcFRZbm6MI9g0fiCphnUDExijG8Yvc3W389mKrBi
        FN7WKUALXT1ocGiEMCLPUp5Dx45fu9MS9QzfoQMmpRVM46ji22RKbsv2WFaGFW/i++nZZMayZQPEDKPR
        ydRBV6c+sVz/826ySmevnB30GRiWZ61hg4TJs88f/82h8XBvfwozDzPIe5CnIr6uT8g0o65+mYa0AUwn
        EtvjuGCxYlQOB/0YZpN2IXkXaddubnbyBGCbPaxMllJzHHcRwIoqvB/sxpAyKh0bdxOYOBiM53YIWFGV
        i2P1Px9+nN+xPx/uCqyoI6yoI6yoI6yoI6yoI6yoI6yoI6yoI6yoI6yoI6yoI6yoI6yoH2LiJ4ZprxCq
        8iipAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADIGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9
        InhtcC5paWQ6Q0FEMDgzMUU1N0EzMTFFNEE1RUFCRUUxMzFFQUI0M0UiIHhtcE1NOkRvY3VtZW50SUQ9
        InhtcC5kaWQ6Q0FEMDgzMUY1N0EzMTFFNEE1RUFCRUUxMzFFQUI0M0UiPiA8eG1wTU06RGVyaXZlZEZy
        b20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpDQUQwODMxQzU3QTMxMUU0QTVFQUJFRTEzMUVBQjQz
        RSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpDQUQwODMxRDU3QTMxMUU0QTVFQUJFRTEzMUVBQjQz
        RSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVu
        ZD0iciI/Piwe8jEAAAH8SURBVGhD7ZbBTQNBDEW3BVqgBa4caSEtpAVaoAVaSAu0QAu0kBJY/Ji15Fg/
        2URBER9xeMnuH4/H9ngymeZ5/hNI0REpOiJFR6ToiBQdkaIjUnREio5I0REpOjJNn4/n8Bx8BHPhLUC/
        D9ScS3gNqm9QdsdpAoHtg6fl/WF574tUmNP9XMo1iRDrngeCfQmqEwap9FoSu6A63QbvQY4zXyWaBat2
        +ZykLXH0RIn3LmCcWKO3Dg2ASUzuyXVYvLbVKXuSSztVfQW2pzoi1x+JLiL93yvXzwQca6NRldMw9xy7
        BL+cw6qx41Xne8QQH1RyvBxSHSR1Byp9N1gQ26qxK92OqtIitGjVAb1ritFiywsOqVj2HVyyI71dMuHu
        o9tlRVW79UIcY6zVRKA6DK71cj0j1+6IWkvtCD44N6yZsM6Oh5/41brVGVEMn/FRYTGCZ5B3vteSyXbr
        xahQyWxb7JVNB1uKqVo8YYzd/75H1iCATLA6oVro2V6wCQg6bZiTiVawUwe8kra5fh1Lv1mc/z+Nvw4p
        OiJFR6ToiBQdkaIjUrw1cQ/w74L7h2fuBy5XnrlrNmpOR4q3JoLNRPLy479XJrJVczpSdESKjkjRESk6
        IkVHpOiIFB2RoiNSdESKjkjRESk6IkVHpOiIFB2RoiNSdESKjkjRj3n6AkVynE+8GecLAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>